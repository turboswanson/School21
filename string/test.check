#include <stdio.h>
#include "s21_string.h"
#include <string.h>
#include <stdlib.h>

const char a[] = "Hello world";
const char b[] = "Hello world\n\0";
const char c[] = "a\n\0";
const char d[] = " \n\0";
const char e[] = " \0";
const char f[] = "\n\0";
const char g[] = "\0";


#test s21_memchr_test
ck_assert_ptr_eq(memchr(a, 'e', 4), s21_memchr(a, 'e', 4));
ck_assert_ptr_eq(memchr(a, 'd', 4), s21_memchr(a, 'd', 4));
ck_assert_ptr_eq(memchr(e, 'd', 1), s21_memchr(e, 'd', 1));
ck_assert_ptr_eq(memchr(b, 'd', 1), s21_memchr(b, 'd', 1));
ck_assert_ptr_eq(memchr(b, 'd', 12), s21_memchr(b, 'd', 12));
ck_assert_ptr_eq(memchr(c, 'a', 1), s21_memchr(c, 'a', 1));
ck_assert_ptr_eq(memchr(d, 'd', 3), s21_memchr(d, 'd', 3));
ck_assert_ptr_eq(memchr(e, ' ', 1), s21_memchr(e, ' ', 1));
ck_assert_str_eq(memchr(a, 'l',5), s21_memchr(a, 'l',5));
ck_assert(s21_memchr(a, 'n',5) == NULL);
ck_assert(s21_memchr(a, '\n',5) == NULL);
ck_assert_str_eq(memchr(e, ' ',2), s21_memchr(e, ' ',2));

char *s1 = "This is a s21_memchr test";
ck_assert_ptr_eq(s21_memchr(s1, 's', 0), memchr(s1, 's', 0));
ck_assert_ptr_eq(s21_memchr(s1, 's', 2), memchr(s1, 's', 2));
ck_assert_ptr_eq(s21_memchr(s1, 's', 20), memchr(s1, 's', 20));
ck_assert_ptr_eq(s21_memchr(s1, 'u', 20), memchr(s1, 'u', 20));
ck_assert_ptr_eq(s21_memchr(s1, 'u', 25), memchr(s1, 'u', 25));

char *s2 = "Str55333222ingA";
ck_assert_ptr_eq(s21_memchr(s2, '3', 2), memchr(s2, '3', 2));
ck_assert_ptr_eq(s21_memchr(s2, '3', 4), memchr(s2, '3', 4));
ck_assert_ptr_eq(s21_memchr(s2, '3', 8), memchr(s2, '3', 8));
ck_assert_ptr_eq(s21_memchr(s2, '3', 10), memchr(s2, '3', 10));
ck_assert_ptr_eq(s21_memchr(s2, '3', 20), memchr(s2, '3', 20));


#test s21_memcmp_test
ck_assert_int_eq(memcmp(a, b, 10),s21_memcmp(a, b, 10));
ck_assert_int_eq(memcmp(b, b, 3),s21_memcmp(b, b, 3));
ck_assert_int_eq(memcmp(c, c, 1),s21_memcmp(c, c, 1));

char *s1 = "This is a 1st string s21_memcmp test";
char *s2 = "This is a 2nd STRING s21_memcmp test";
ck_assert_int_eq(memcmp(s1,s2,36),s21_memcmp(s1,s2,36));

char s3[] = "111111111111111111112312312312312312434524563567adsfe 4rafa ewfseASDASD";
char s4[] = "111111111111111111112312312312312312434524563567adsfe 4rafa ewfseASDASD";
ck_assert_int_eq(memcmp(s3,s4,71),s21_memcmp(s3,s4,71));

#test s21_memcpy_test

char b1[50] = {0};
char b2[50] = {0};
char b3[50] = {0};
char b4[50] = {0};
ck_assert_str_eq(memcpy(b1, a, 5), s21_memcpy(b2, a, 5));
ck_assert_str_eq(memcpy(b3, e, 1), s21_memcpy(b4, e, 1));

char *src1 = "schesrdsfdsfdsfesr";

char dest1[100] = {0};
char dest2[100] = {0};
char dest3[100] = {0};
char dest4[100] = {0};
char dest5[100] = {0};
char dest6[100] = {0};
char dest7[100] = {0};
char dest8[100] = {0};
char dest9[100] = {0};
char dest10[100] = {0};

s21_memcpy(dest1, src1, 1);
memcpy(dest2, src1, 1);
s21_memcpy(dest3, src1, 5);
memcpy(dest4, src1, 5);
s21_memcpy(dest5, src1, 0);
memcpy(dest6, src1, 0);
s21_memcpy(dest7, src1, 20);
memcpy(dest8, src1, 20);
s21_memcpy(dest9, src1, 1);
memcpy(dest10, src1, 1);

ck_assert_str_eq(dest1, dest2);
ck_assert_str_eq(dest3, dest4);
ck_assert_str_eq(dest5, dest6);
ck_assert_str_eq(dest7, dest8);
ck_assert_str_eq(dest9, dest10);

#test s21_memset_test

char b1[50] = "lolkek";
char b2[50] = "lolkek";
ck_assert_str_eq(memset(b1, '*', 8), s21_memset(b2, '*', 8));
ck_assert_str_eq(memset(b1, '#', 3), s21_memset(b2, '#', 3));
ck_assert_str_eq(memset(b1, '|', 1), s21_memset(b2, '|', 1));

#test s21_strlen_test

ck_assert_uint_eq(strlen(a), s21_strlen(a));
ck_assert_uint_eq(strlen(b), s21_strlen(b));
ck_assert_uint_eq(strlen(c), s21_strlen(c));
ck_assert_uint_eq(strlen(d), s21_strlen(d));
ck_assert_uint_eq(strlen(e), s21_strlen(e));
ck_assert_uint_eq(strlen(f), s21_strlen(f));
ck_assert_uint_eq(strlen(g), s21_strlen(g));

#test s21_strcat_test

char b1[20] = "a";
char b2[20] = "a";
char b3[50] = "lolkek";
char b4[50] = "lolkek";
ck_assert_str_eq(strcat(b1, a), s21_strcat(b2, a));
ck_assert_str_eq(strcat(b3, "cheburek"), s21_strcat(b4, "cheburek"));
char str1[21] = "TEST";
char str2[8] = "strcat";
char str3[9] = "function";
char str4[1] = "";
char str5[2] = " ";
s21_strcat(str1, str5);
ck_assert_msg(!memcmp(str1, "TEST ", 6), "1st strcat test failed");
s21_strcat(str1, str2);
ck_assert_msg(!memcmp(str1, "TEST strcat", 12), "2nd strcat test failed");
s21_strcat(str1, str5);
ck_assert_msg(!memcmp(str1, "TEST strcat ", 13), "3rd strcat test failed");
s21_strcat(str1, str3);
ck_assert_msg(!memcmp(str1, "TEST strcat function", 21),
              "4rth strcat test failed");
s21_strcat(str1, str4);
ck_assert_msg(!memcmp(str1, "TEST strcat function", 21),
              "5th strcat test failed");

#test s21_strncat_test

char b1[20] = "a";
char b2[20] = "a";
char b3[50] = "lolkek";
char b4[50] = "lolkek";
ck_assert_str_eq(strncat(b1, a, 5), s21_strncat(b2, a, 5));
ck_assert_str_eq(strncat(b3, "cheburek", 4), s21_strncat(b4, "cheburek", 4));

#test test_s21_strchr
ck_assert_str_eq(strchr(a, 'l'), s21_strchr(a, 'l'));
ck_assert(s21_strchr(a, 'n') == NULL);
ck_assert(s21_strchr(a, '\n') == NULL);
ck_assert_str_eq(strchr(a,'\0'),s21_strchr(a, '\0'));
ck_assert_str_eq(strchr(g, '\0'), s21_strchr(g, '\0'));
ck_assert_str_eq(strchr(e, ' '), s21_strchr(e, ' '));

#test s21_strcmp_test

ck_assert(s21_strcmp(a, a) == 0);
ck_assert(s21_strcmp(a, b) < 0);
ck_assert(s21_strcmp(c, a) > 0);
ck_assert(s21_strcmp(f, g) > 0);

#test s21_strncmp_test

ck_assert(s21_strncmp(a, a, 10) == 0);
ck_assert(s21_strncmp(a, c, 3) < 0);
ck_assert(s21_strncmp(c, a, 3) > 0);
ck_assert(s21_strncmp(f, g, 1) > 0);

#test s21_strcpy_test

char b1[20];
char b2[20];
char b3[] = "aaaaaaaaaaaaaaaaaaaaaaaaaa";
char b4[] = "aaaaaaaaaaaaaaaaaaaaaaaaaa";
ck_assert_str_eq(strcpy(b1, a), s21_strcpy(b2, a));
ck_assert_str_eq(strcpy(b3, a), s21_strcpy(b4, a));

#test s21_strncpy_test

char src[] = "";
char res[] = "";
char exp[] = "";
size_t n = 0;
ck_assert_str_eq(strncpy(exp,src,n),s21_strncpy(res,src,n));
char b1[60] = "lolkek";
char b2[60] = "lolkek";
char src1[60] = "penis";
ck_assert_str_eq(strncpy(b1, src1, 15), s21_strncpy(b2, src1, 15));
char b3[60] = "lolkek";
char b4[60] = "lolkek";
ck_assert_str_eq(strncpy(b3, c,3), s21_strncpy(b4, c, 3));
char b5[60] = "lolkek";
char b6[60] = "lolkek";
ck_assert_str_eq(strncpy(b5, d,3), s21_strncpy(b6, d, 3));

#test s21_strcspn_test

ck_assert_int_eq(strcspn(a, "Hel"), s21_strcspn(a, "Hel"));
ck_assert_int_eq(strcspn(a, "llo"), s21_strcspn(a, "llo"));
ck_assert_int_eq(strcspn(a, a), s21_strcspn(a, a));
ck_assert_int_eq(strcspn(a, e), s21_strcspn(a, e));

#test s21_strpbrk_test

ck_assert_str_eq(strpbrk(a, "llo"), s21_strpbrk(a, "llo"));
ck_assert_str_eq(strpbrk(a, "aeiou"), s21_strpbrk(a, "aeiou"));
ck_assert_str_eq(strpbrk(a, "et"), s21_strpbrk(a, "et"));
ck_assert_ptr_eq(strpbrk(e, "abc"),s21_strpbrk(e, "abc"));

#test s21_strrchr_test

ck_assert_str_eq(strrchr(a, 'l'), s21_strrchr(a, 'l'));
ck_assert(s21_strrchr(a, 'n') == NULL);
ck_assert(s21_strrchr(a, '\n') == NULL);
ck_assert_str_eq(strrchr(b, '\0'), s21_strrchr(b, '\0'));
ck_assert_str_eq(strrchr(g, '\0'), s21_strrchr(g, '\0'));
ck_assert_str_eq(strrchr(e, ' '), s21_strrchr(e, ' '));

#test s21_strspn_test
ck_assert_int_eq(strspn(a, "Hel"), s21_strspn(a, "Hel"));
ck_assert_int_eq(strspn(a, "llo"), s21_strspn(a, "llo"));
ck_assert_int_eq(strspn(a, a), s21_strspn(a, a));
ck_assert_int_eq(strspn(a, e), s21_strspn(a, e));




