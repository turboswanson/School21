#include <stdio.h>
#include "s21_string.h"
#include <string.h>
#include <stdlib.h>

const char a[] = "Hello world";
const char b[] = "Hello world\n\0";
const char c[] = "a\n\0";
const char d[] = " \n\0";
const char e[] = " \0";
const char f[] = "\n\0";
const char g[] = "\0";


#test test_s21_memchr
ck_assert_ptr_eq(memchr(a, 'e', 4), s21_memchr(a, 'e', 4));
ck_assert_ptr_eq(memchr(a, 'd', 4), s21_memchr(a, 'd', 4));
ck_assert_ptr_eq(memchr(e, 'd', 1), s21_memchr(e, 'd', 1));
ck_assert_ptr_eq(memchr(b, 'd', 1), s21_memchr(b, 'd', 1));
ck_assert_ptr_eq(memchr(b, 'd', 12), s21_memchr(b, 'd', 12));
ck_assert_ptr_eq(memchr(c, 'a', 1), s21_memchr(c, 'a', 1));
ck_assert_ptr_eq(memchr(d, 'd', 3), s21_memchr(d, 'd', 3));
ck_assert_ptr_eq(memchr(e, ' ', 1), s21_memchr(e, ' ', 1));

char *s1 = "This is a s21_memchr test";
ck_assert_ptr_eq(s21_memchr(s1, 's', 0), memchr(s1, 's', 0));
ck_assert_ptr_eq(s21_memchr(s1, 's', 2), memchr(s1, 's', 2));
ck_assert_ptr_eq(s21_memchr(s1, 's', 20), memchr(s1, 's', 20));
ck_assert_ptr_eq(s21_memchr(s1, 'u', 20), memchr(s1, 'u', 20));
ck_assert_ptr_eq(s21_memchr(s1, 'u', 25), memchr(s1, 'u', 25));

char *s2 = "Str55333222ingA";
ck_assert_ptr_eq(s21_memchr(s2, '3', 2), memchr(s2, '3', 2));
ck_assert_ptr_eq(s21_memchr(s2, '3', 4), memchr(s2, '3', 4));
ck_assert_ptr_eq(s21_memchr(s2, '3', 8), memchr(s2, '3', 8));
ck_assert_ptr_eq(s21_memchr(s2, '3', 10), memchr(s2, '3', 10));
ck_assert_ptr_eq(s21_memchr(s2, '3', 20), memchr(s2, '3', 20));


#test test_s21_memcmp
ck_assert_int_eq(memcmp(a, b, 10),s21_memcmp(a, b, 10));
ck_assert_int_eq(memcmp(b, b, 3),s21_memcmp(b, b, 3));
ck_assert_int_eq(memcmp(c, c, 1),s21_memcmp(c, c, 1));

char *s1 = "This is a 1st string s21_memcmp test";
char *s2 = "This is a 2nd STRING s21_memcmp test";
ck_assert_int_eq(memcmp(s1,s2,36),s21_memcmp(s1,s2,36));

char s3[] = "111111111111111111112312312312312312434524563567adsfe 4rafa ewfseASDASD";
char s4[] = "111111111111111111112312312312312312434524563567adsfe 4rafa ewfseASDASD";
ck_assert_int_eq(memcmp(s3,s4,71),s21_memcmp(s3,s4,71));



